name: Release Factorio Mod

on:
  push:
    branches: [ main, master ]
    paths:
      - 'info.json'  # Only trigger when info.json changes
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write   # Needed to create releases and upload assets

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper tagging
    
    - name: Read version from info.json
      id: get_version
      run: |
        VERSION=$(jq -r '.version' info.json)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version found: $VERSION"
    
    - name: Get mod name from info.json
      id: get_mod_name
      run: |
        MOD_NAME=$(jq -r '.name' info.json)
        echo "mod_name=$MOD_NAME" >> $GITHUB_OUTPUT
        echo "Mod name: $MOD_NAME"
    
    - name: Check if tag already exists
      id: check_tag
      run: |
        git fetch --tags
        if git rev-parse "v${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.get_version.outputs.version }} already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.get_version.outputs.version }} does not exist"
        fi
    
    - name: Create Factorio Direct Install Package
      if: steps.check_tag.outputs.exists == 'false'
      run: |
        MOD_NAME="${{ steps.get_mod_name.outputs.mod_name }}"
        VERSION="${{ steps.get_version.outputs.version }}"
        FACTORIO_PACKAGE_NAME="${MOD_NAME}_${VERSION}"
        
        mkdir -p "temp/factorio/$FACTORIO_PACKAGE_NAME"
        
        rsync -av --progress . "temp/factorio/$FACTORIO_PACKAGE_NAME/" \
          --exclude='.git/' \
          --exclude='.github/' \
          --exclude='.vscode/' \
          --exclude='.idea/' \
          --exclude='*.code-workspace' \
          --exclude='node_modules/' \
          --exclude='.gitignore' \
          --exclude='.gitattributes' \
          --exclude='README.md' \
          --exclude='LICENSE' \
          --exclude='*.md' \
          --exclude='.env' \
          --exclude='.env.*' \
          --exclude='Thumbs.db' \
          --exclude='.DS_Store' \
          --exclude='*.tmp' \
          --exclude='*.temp' \
          --exclude='temp/' \
          --exclude='build/' \
          --exclude='dist/' \
          --exclude='.pytest_cache/' \
          --exclude='__pycache__/' \
          --exclude='*.pyc' \
          --exclude='*.log'
        
        cd temp/factorio
        zip -r "../../${FACTORIO_PACKAGE_NAME}.zip" "$FACTORIO_PACKAGE_NAME/"
        cd ../..
        
        echo "Created Factorio package: ${FACTORIO_PACKAGE_NAME}.zip"
        ls -la "${FACTORIO_PACKAGE_NAME}.zip"
    
    - name: Clean up temp directories
      if: steps.check_tag.outputs.exists == 'false'
      run: rm -rf temp
    
    - name: Create Release
      if: steps.check_tag.outputs.exists == 'false'
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: "${{ steps.get_mod_name.outputs.mod_name }} v${{ steps.get_version.outputs.version }}"
        body: |
          ## ${{ steps.get_mod_name.outputs.mod_name }} v${{ steps.get_version.outputs.version }}
          
          Factorio mod release for version ${{ steps.get_version.outputs.version }}.
          
          ### Installation Options
          
          **Option 1: Direct Factorio Installation**
          1. Download `${{ steps.get_mod_name.outputs.mod_name }}_${{ steps.get_version.outputs.version }}.zip`
          2. Extract it to your Factorio mods folder (`%appdata%/Factorio/mods` on Windows)
          3. Restart Factorio
          
          **Option 2: Mod Portal Upload**
          1. Download `${{ steps.get_mod_name.outputs.mod_name }}_${{ steps.get_version.outputs.version }}_mod-portal.zip`
          2. Upload this file to the [Factorio Mod Portal](https://mods.factorio.com/)
          
          ### Package Differences
          - **Direct Install**: Contains mod files in a properly named folder structure
          - **Mod Portal**: Contains mod files in root of zip (required for mod portal upload)
          
          ### Changes
          See the changelog in the mod files for detailed changes in this version.
        draft: false
        prerelease: false
    
    - name: Upload Factorio Direct Install Asset
      if: steps.check_tag.outputs.exists == 'false'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.get_mod_name.outputs.mod_name }}_${{ steps.get_version.outputs.version }}.zip
        asset_name: ${{ steps.get_mod_name.outputs.mod_name }}_${{ steps.get_version.outputs.version }}.zip
        asset_content_type: application/zip
    
    - name: Upload Mod Portal Asset
      if: steps.check_tag.outputs.exists == 'false'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.get_mod_name.outputs.mod_name }}_${{ steps.get_version.outputs.version }}_mod-portal.zip
        asset_name: ${{ steps.get_mod_name.outputs.mod_name }}_${{ steps.get_version.outputs.version }}_mod-portal.zip
        asset_content_type: application/zip
    
    - name: Skip release (tag exists)
      if: steps.check_tag.outputs.exists == 'true'
      run: |
        echo "Skipping release creation - tag v${{ steps.get_version.outputs.version }} already exists"