name: Create GitHub Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read mod name and version from info.json
        id: mod_info
        run: |
          MOD_NAME=$(jq -r .name info.json)
          MOD_VERSION=$(jq -r .version info.json)
          echo "MOD_NAME=$MOD_NAME" >> $GITHUB_ENV
          echo "MOD_VERSION=$MOD_VERSION" >> $GITHUB_ENV

      - name: Create release directory
        run: mkdir -p ${{ env.MOD_NAME }}_${{ env.MOD_VERSION }}

      - name: Copy mod files
        run: |
          cp data.lua info.json changelog.txt thumbnail.png ${{ env.MOD_NAME }}_${{ env.MOD_VERSION }}/
          cp -r locale ${{ env.MOD_NAME }}_${{ env.MOD_VERSION }}/

      - name: Zip Release
        run: |
          zip -r ${{ env.MOD_NAME }}_${{ env.MOD_VERSION }}.zip ${{ env.MOD_NAME }}_${{ env.MOD_VERSION }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.MOD_NAME }}_${{ env.MOD_VERSION }}.zip
          asset_name: ${{ env.MOD_NAME }}_${{ env.MOD_VERSION }}.zip
          asset_content_type: application/zip