name: Release Factorio Mod

on:
  push:
    branches: [ main, master ]
    paths: 
      - 'info.json'  # Only trigger when info.json changes
  workflow_dispatch:  # Allow manual triggering

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper tagging
    
    - name: Read version from info.json
      id: get_version
      run: |
        VERSION=$(jq -r '.version' info.json)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version found: $VERSION"
    
    - name: Check if tag already exists
      id: check_tag
      run: |
        if git rev-parse "v${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.get_version.outputs.version }} already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Tag v${{ steps.get_version.outputs.version }} does not exist"
        fi
    
    - name: Get mod name from info.json
      id: get_mod_name
      run: |
        MOD_NAME=$(jq -r '.name' info.json)
        echo "mod_name=$MOD_NAME" >> $GITHUB_OUTPUT
        echo "Mod name: $MOD_NAME"
    
    - name: Create mod package
      if: steps.check_tag.outputs.exists == 'false'
      run: |
        MOD_NAME="${{ steps.get_mod_name.outputs.mod_name }}"
        VERSION="${{ steps.get_version.outputs.version }}"
        PACKAGE_NAME="${MOD_NAME}_${VERSION}"
        
        # Create a temporary directory for the mod package
        mkdir -p "temp"
        
        # Copy all files directly to temp directory (files in root of zip)
        rsync -av --progress . "temp/" \
          --exclude='.git/' \
          --exclude='.github/' \
          --exclude='.vscode/' \
          --exclude='.idea/' \
          --exclude='*.code-workspace' \
          --exclude='node_modules/' \
          --exclude='.gitignore' \
          --exclude='.gitattributes' \
          --exclude='README.md' \
          --exclude='LICENSE' \
          --exclude='*.md' \
          --exclude='.env' \
          --exclude='.env.*' \
          --exclude='Thumbs.db' \
          --exclude='.DS_Store' \
          --exclude='*.tmp' \
          --exclude='*.temp' \
          --exclude='temp/' \
          --exclude='build/' \
          --exclude='dist/' \
          --exclude='.pytest_cache/' \
          --exclude='__pycache__/' \
          --exclude='*.pyc' \
          --exclude='*.log'
        
        # Create the zip file with mod files in root
        cd temp
        zip -r "../${PACKAGE_NAME}.zip" .
        cd ..
        
        # Clean up temp directory
        rm -rf temp
        
        echo "Created package: ${PACKAGE_NAME}.zip"
        ls -la "${PACKAGE_NAME}.zip"
    
    - name: Create Release with GitHub CLI
      if: steps.check_tag.outputs.exists == 'false'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        MOD_NAME="${{ steps.get_mod_name.outputs.mod_name }}"
        VERSION="${{ steps.get_version.outputs.version }}"
        PACKAGE_NAME="${MOD_NAME}_${VERSION}"
        
        # Create release with GitHub CLI
        gh release create "v${VERSION}" \
          --title "Instant Mining v${VERSION}" \
          --notes "## Instant Mining v${VERSION}

        Factorio mod release for version ${VERSION}.

        ### Installation

        **Direct Installation:**
        1. Download the zip file below
        2. Place the zip file directly in your Factorio mods folder (\`%appdata%/Factorio/mods\` on Windows, \`~/.factorio/mods\` on Linux)
        3. Do NOT extract the zip file - Factorio will handle it automatically
        4. Restart Factorio

        **Mod Portal:**
        This same zip file can be uploaded directly to the [Factorio Mod Portal](https://mods.factorio.com/) without any modifications.

        ### Package Format
        This package contains mod files in the root of the zip (no subfolder), which is the correct format for both direct Factorio installation and mod portal upload.

        ### Changes
        See the changelog in the mod files for detailed changes in this version." \
          "${PACKAGE_NAME}.zip"
    
    - name: Skip release (tag exists)
      if: steps.check_tag.outputs.exists == 'true'
      run: |
        echo "Skipping release creation - tag v${{ steps.get_version.outputs.version }} already exists"